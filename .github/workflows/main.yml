# .github/workflows/main.yml
# CI/CD pipeline для Python + Rust проекта

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    # 1. Получить исходники
    - name: Checkout repository
      uses: actions/checkout@v4

    # 2. Установить Python
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    # 3. Установить Rust
    - name: Set up Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    # 4. Кэшировать зависимости pip
    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # 5. Установить Python зависимости
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # 6. Собрать Rust код (если требуется)
    - name: Build Rust code
      run: cargo build --verbose

    # 7. Прогнать Rust тесты (если есть)
    - name: Run Rust tests
      run: cargo test

    # 8. Проверить Python синтаксис
    - name: Lint Python code (flake8)
      run: |
        pip install flake8
        flake8 src/

    # 9. Запуск Python-тестов (если есть тесты)
    - name: Run Python tests (pytest)
      run: |
        pip install pytest
        pytest src/
      # Если нет автотестов, можно этот шаг убрать или изменить

    # 10. Демо: Проверить структуру файлов
    - name: List project files
      run: ls -R

# Конец файла
