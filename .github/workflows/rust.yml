name: Rust

on:
  push:
    branches: ["telegram-bot"]
  pull_request:
    branches: ["telegram-bot"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build & test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@master
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: clippy
          override: true
      - name: Configure cache
        uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build --verbose
      - name: Run formatter
        run: cargo clippy --all-targets --all-features
      - name: Run tests
        run: cargo test --verbose

  print_doc_coverage:
    name: Print documentation coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Configure cache
        uses: Swatinem/rust-cache@v2
      - id: coverage
        uses: bewee/rustdoc-coverage-action@v1
        with:
          percentage-format: 0%
      - name: Create Awesome Badge
        uses: schneegans/dynamic-badges-action@v1.1.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 1b10014d0019c22cc1984bc8a7be7152
          filename: doc-coverage.json
          label: doc cov
          message: ${{ steps.coverage.outputs.documented }}
          color: orange

  docs:
    name: Generate pages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Configure cache
        uses: Swatinem/rust-cache@v2
      - name: Setup pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Clean docs folder
        run: cargo clean --doc
      - name: Build docs
        run: cargo doc --no-deps
      - name: Add redirect
        run: echo '<meta http-equiv="refresh" content="0;url=aoc/index.html">' > target/doc/index.html
      - name: Remove lock file
        run: rm target/doc/.lock
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: target/doc
  deploy:
    name: Deploy pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: docs
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
